//common declaration
let responder = require("../../sender/response.sender");
let access = require("../../service/access.service");
let joi = require("joi");
let base64ToImage = require('base64-to-image');
//page wise declartion -- model and service
let studentModel = require("../../models/students/student.modal");
let studentService = require("../../service/students/student.service");

var fs = require('fs');
var log_file = fs.createWriteStream('./registration.log', {flags : 'w'});

//methods initializers
let studentController = {
  postRegistration: post,
  getByAdhar:getStudentbyAdhar
};

//module exporter
module.exports = studentController;

function post(req, res) {   
  console.log("sstudent controller 1 : ");   
    //req.body.imageStudents = req.file.path;
    //studentModel.body = req.body;
    //console.log("sstudent controller : ",[studentModel]);
    let thisModal = req.body;
    if(thisModal.imageStudents.indexOf('base64') > -1){
      console.log("I am in base 64");
      
      let indexBase64 = thisModal.imageStudents.indexOf('base64') - 1;
      let indexSlash = thisModal.imageStudents.indexOf('/') + 1;
      let fileType = thisModal.imageStudents.substring(indexSlash,indexBase64);
      let fileName = thisModal.firstNameStudents +thisModal.adharNoStudents.toString();
      let optionalObj = {'fileName': fileName, 'type':fileType};
      console.log("I am in base 64 ::: ",optionalObj);
      let path ='./uploads/Students/';
      let imageInfo = base64ToImage(thisModal.imageStudents,path,optionalObj);
      console.log("student image info : ",[imageInfo]);      
      req.body.imageStudents = './uploads/Students/'+fileName+'.'+fileType;
    }
    console.log("student req body :: ",[req.body]);
    
    joi.validate(req.body, studentModel.body, function(err, value) {
      
      
      if (err) {
        log_file.write(err);
        responder.valiodationFail(res);
      } else {
        studentService.postStudent(req, function(err, result) {
          console.log("ME HERE...",[err]);
      log_file.write("err :" + err + ":::::Res" + result);
      if (err) {
        log_file.write(err);
      }
          responder.response(err, result, res);
        });
      }
    });  
}

function getStudentbyAdhar(req,res){
  studentService.getByAdhar(req, function(err, result) {
    responder.response(err, result, res);
  });
}