//common declaration
let responder = require("../../sender/response.sender");
let access = require("../../service/access.service");
let joi = require("joi");

//page wise declartion -- model and service
let eventModel = require("../../models/events/event.modal");
let eventService = require("../../service/events/event.service");

//methods initializers
let eventController = {
  get: getAll,
  postEvent: post
};

//module exporter
module.exports = eventController;


//methods definer
function getAll(req, res) {
    eventService.getEvents(req, function(err, result) {
      responder.response(err, result, res);
    });
  }

function post(req, res) {console.log("here",[req.body]," :::::file :::: ",[req.file.path]);
  if (req.body.token) {
      
      
    access.getAccess(req.body.token, res, null, function(err, result) {
      if (err) {
        responder.valiodationFail(res);
      } else {
        if (result[0].idEmployee && req.file.path) {
          req.body.employeeId = result[0].idEmployee;
          req.body.imageUrlEventSection = req.file.path;                    
          eventModel.body = req.body;
          joi.validate(req.body, eventModel.body, function(
            err,
            value
          ) {
              console.log("joi error ::: ",[err]);
              
            if (err) {
              responder.valiodationFail(res);
            } else {
              eventService.postEvent(req, function(err, result) {
                responder.response(err, result, res);
              });
            }
          });
        } else {
          responder.valiodationFail(res);
        }
      }
    });
  } else {
    responder.invalidLogin(res);
  }
}
