let sql = require('../../config/application');
let fs = require('fs');

let dbService = {
    executeSql: executeSql,
    execFileUpload: exeSqlTransactionForFileUpload,
}

module.exports = dbService;


function executeSql(sqlQuery, params, result,req) {
    sql.query(sqlQuery, params, function (err, res) {
        if (err) {
            
            
            if (req.files) {
                req.files.forEach(element => {
                    fs.unlink(element.path, (err1) => {
                        if (err1) console.log('error in delete file.');
                        console.log('successfully deleted.');
                    });
                });
                if(req.file){
                    fs.unlink(req.file.path,err1=>{
                        if (err1) console.log('error in delete file');
                        console.log('successfully deleted');
                    });
                }
            }            
        }
        console.log("Error ::: ",[res],[err]);
        result(err, res);
    });
}

function exeSqlTransactionForFileUpload(sqlQuery, params, arrayForLoop, response, result) {
    sql.beginTransaction(function (err) {
        if (err) {
            console.log("error in transaction ::: ", [err]);
        }
        let resultArray = [];
        let isSendRes = true;
        let tempParams = [];
        arrayForLoop.forEach(element => {
            if (isSendRes) {
                setTimeout(() => {
                    tempParams = new Array();
                    Object.assign(tempParams,params);
                    tempParams.push(element.path);
                    console.log("exec query ::: ", [sqlQuery],[params], [tempParams]);
                    console.log("param ::: ", [params], [tempParams]);
                    console.log("temp param ::: ",  [tempParams]);
                    sql.query(sqlQuery, tempParams, function (err, res) {
                        if (err) {
                            sql.rollback();
                            isSendRes = false;
                            let uploaderService = require('../uploader.service');
                            uploaderService.deleteUploadedFiles(arrayForLoop, response);
                        }
                        else {
                            resultArray.push({ "err": err, "res": res });
                        }
                    });
                }, 1000);
            }
        });
        setTimeout(() => {
            if (isSendRes) {
                sql.commit();
                if (resultArray.length > 0) {
                    let data = [];
                    let affectedRows = 0;
                    let insertedId = [];
                    resultArray.forEach(element => {
                        affectedRows += element.res.affectedRows;
                        insertedId.push(element.res.insertId);
                    });
                    setTimeout(() => {
                        let returnObj = [{
                            'status': resultArray[0].status,
                            'message': resultArray[0].message,
                            'data': {
                                'affectedRows': affectedRows,
                                'insertedIds': insertedId.toString()
                            }
                        }]
                        return result(null, returnObj);
                    }, 1000);
                }
                else { return result(null, null); }
            }
        }
            , 5000);
    });
}

