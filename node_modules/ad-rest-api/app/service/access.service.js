let sql = require('../config/application');
let responder = require('../sender/response.sender');
let uploaderService = require('../service/uploader.service');
let sliderHomepageService = {
    getAccess: get
    , validateLogin: checkCredentialAndGenerateToken
    , employeeRegister: registerEmployee
}

module.exports = sliderHomepageService;

function get(token, res, uploadedFiles, result) {
    let sqlQuery = "SELECT idEmployee FROM employee WHERE tokenEmployee = ? AND isActiveEmployee = 1 AND isDeleteEmployee = 0;";
    let params = [token];
    sql.query(sqlQuery, params, function (err, response) {
        if (err) {
            if (uploadedFiles != null && uploadedFiles.length > 0) {
                uploaderService.deleteUploadedFiles(uploadedFiles, res);
            }
            else {
                responder.invalidLogin(res);
            }
        }
        else {
            if (response && response.length > 0 && response[0].idEmployee) {
                result(null, response);
            }
            else {
                if (uploadedFiles != null && uploadedFiles.length > 0) {
                    uploaderService.deleteUploadedFiles(uploadedFiles, res);
                }
                else {
                    responder.invalidLogin(res);
                }
            }
        }
    });
}

function checkCredentialAndGenerateToken(req, sendresponse, result) {
    let sqlQuery = "SELECT idEmployee , uuid() as token, userTypeId as type FROM employee WHERE usernameEmployee = ? AND passwordEmployee = MD5(?) ;";
    let params = [req.query.userName, req.query.password];
    sql.query(sqlQuery, params, function (err, res) {
        if (err) {
            responder.invalidLogin(sendresponse);
        }
        else {
            if (res[0] && res[0].idEmployee && res[0].idEmployee > 0) {
                sqlQuery = "UPDATE employee SET tokenEmployee = ? WHERE idEmployee = ?";
                params = [res[0].token, res[0].idEmployee];
                sql.query(sqlQuery, params, function (err, response) {
                    if (err) {
                        responder.invalidLogin(sendresponse);
                    }
                    else {
                        result(null, res);
                    }
                });
            }
            else {
                responder.invalidLogin(sendresponse);
            }
        }
    });
}


function registerEmployee(req, result) {
    console.log("inside the insert");

    let accessModel = require('../models/access.modal');
    let thisModel = accessModel.body = req.body;
    let sqlQuery = "";
    let params = [thisModel.nameEmployee, thisModel.moNoEmployee, thisModel.usernameEmployee, thisModel.isActiveEmployee, thisModel.isDeleteEmployee];
    if (thisModel.idEmployee && thisModel.idEmployee > 0) {
        sqlQuery = "select * from employee where idEmployee = ?";
        sql.query(sqlQuery, [thisModel.idEmployee], function (err, res) {
            if (err) {
                result(err, res);
            }
            else {
                sqlQuery = "UPDATE employee SET nameEmployee = ? , moNoEmployee = ? , usernameEmployee = ? , isActiveEmployee = ? , isDeleteEmployee = ? WHERE idEmployee = ?;";
                params.push(thisModel.idEmployee);
                sql.query(sqlQuery, params, function (err, res) {
                    if (err) {
                        result(err, res);
                    }
                    else {
                        result(null, res);
                    }
                });
            }
        })
    }
    else {
        sqlQuery = "INSERT INTO employee (nameEmployee,moNOEmployee,usernameEmployee,isActiveEmployee,isDeleteEmployee,passwordEmployee,createdOnEmployee) VALUES(?,?,?,?,?,MD5(?),CURDATE())";
        params.push(thisModel.passwordEmployee);

        console.log("hrer::::", sqlQuery, params);

        sql.query(sqlQuery, params, function (err, res) {
            console.log(":::", err, res);

            if (err) {
                result(err, res);
            }
            else {
                result(null, res);
            }
        });
    }
}