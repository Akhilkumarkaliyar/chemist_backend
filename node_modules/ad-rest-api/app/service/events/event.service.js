//common declaration
let dbservice = require("../database/db.service");

//page lavel declaration
let waterfall = require("async-waterfall");
let eventModal  = require("../../models/events/event.modal");

let sliderService = {
  getEvents: get,
  postEvent: post
};

module.exports = sliderService;

function get(req, result) {
  let sqlQuery ="";
  let params = [];
  if(req.query.idEventSection && parseInt(req.query.idEventSection) > 0){
    sqlQuery ="SELECT *, CURDATE() AS curDate FROM `eventsection` WHERE idEventSection = ? ";
    params = [req.query.idEventSection];
  }
  else{
    sqlQuery ="SELECT *,CURDATE() AS curDate FROM `eventsection` ORDER BY dateEventSection DESC ";
    params = [];
  }  
  if(req.query.limit && parseInt(req.query.limit) > 0){
    sqlQuery += " LIMIT "+parseInt(req.query.limit);
  }
  dbservice.executeSql(sqlQuery, params, function(err, res) {
    if (err) {
      result(err, null);
    } else {
      result(null, res);
    }
  },req);
}

function post(req, result) {
    console.log("post event",[req.body]);
    
  let sqlQuery = "";
  eventModal.body = req.body;
  var thisModal = eventModal.body;
  let params = [
    thisModal.titleEventSection,
    thisModal.descEventSection,
    thisModal.sortDescEventSection,
    thisModal.agendaEventSection,
    thisModal.dateEventSection,
    thisModal.lastDateOfEventSection,
    thisModal.imageUrlEventSection,
    thisModal.prevYearVideoUrlEventSection,
    thisModal.isActiveEventSection,
    thisModal.employeeId
  ];
  waterfall(
    [
      function(callback) {
        if (thisModal.idEventSection && thisModal.idEventSection > 0) {
          dbservice.executeSql(
            "SELECT * FROM `eventsection` WHERE `idEventSection` = ?",
            [thisModal.idEventSection],
            function(err, res) {
              if (err) {
                callback(null, err);
              } else {
                sqlQuery  = "UPDATE `eventsection`"
                sqlQuery += " SET `idEventSection`=?,`titleEventSection`=?,`descEventSection`=?,`sortDescEventSection`=?,"
                sqlQuery += " `agendaEventSection`=?,`dateEventSection`=?,`lastDateOfEventSection`=?,`imageUrlEventSection`=?,"
                sqlQuery += " `prevYearVideoUrlEventSection`=?,`isActiveEventSection`=?,`employeeId`=?"
                sqlQuery += " WHERE idEventSection = ?";
                params.push(thisModal.idEventSection);
                callback(null, null);
              }
            },req
          );
        } else {
          sqlQuery  = " INSERT INTO `eventsection`"
          sqlQuery += " (`titleEventSection`, `descEventSection`, `sortDescEventSection`, `agendaEventSection`, `dateEventSection`,"
          sqlQuery += " `lastDateOfEventSection`, `imageUrlEventSection`, `prevYearVideoUrlEventSection`, `isActiveEventSection`, `employeeId`)"
          sqlQuery += " VALUES (?,?,?,?,?,?,?,?,?,?)";
          callback(null, null);
        }
      },
      function(error, callback) {
        if (error) {
          callback(error, null);
        } else {
          dbservice.executeSql(sqlQuery, params, function(err, res) {
            callback(err, res);
          },req);
        }
      }
    ],
    function(err, res) {
      if (err) {
        result(err, null);
      } else {
        result(null, res);
      }
    }
  );
}


